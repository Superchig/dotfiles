;; Object config/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "config/"
  :tables
  (list
    (semanticdb-table "themes.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("package-install" code nil nil [75 107])
            ("package-install" code nil nil [108 142])
            ("package-install" code nil nil [143 175])
            ("package-install" code nil nil [176 210])
            ("package-install" code nil nil [211 240])
            ("load-theme" code nil nil [259 282]))          
      :file "themes.el"
      :pointmax 283
      :fsize 282
      :lastmodtime '(22304 16333 527327 319000)
      :unmatched-syntax nil)
    (semanticdb-table "basic.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("global-linum-mode" code nil nil [53 74])
            ("column-number-mode" code nil nil [75 97])
            ("add-to-list" code nil nil [135 187])
            ("lpc-mode" function (:prototype-flag t) nil [188 222])
            ("package" include nil nil [239 257])
            ("add-to-list" code nil nil [258 346])
            ("add-to-list" code nil nil [347 443])
            ("when" code nil nil [444 609])
            ("package-initialize" code nil nil [610 630])
            ("unless" code nil nil [631 734])
            ("add-to-list" code nil nil [758 809])
            ("unless" code nil nil [811 1047])
            ("add-to-list" code nil nil [1049 1115])
            ("el-get" code nil nil [1116 1130])
            ("desktop-save-mode" code nil nil [1155 1176])
            ("setq" code nil nil [1200 1316])
            ("setq" code nil nil [1341 1383])
            ("add-hook" code nil nil [1410 1670])
            ("global-prettify-symbols-mode" code nil nil [1672 1702])
            ("when" code nil nil [1749 1815])
            ("global-set-key" code nil nil [1886 1940])
            ("server-start" code nil nil [1958 1972])
            ("add-to-list" code nil nil [2024 2079])
            ("add-to-list" code nil nil [2080 2137])
            ("setq" code nil nil [2139 2163]))          
      :file "basic.el"
      :pointmax 2164
      :fsize 2171
      :lastmodtime '(22304 16333 526327 346000)
      :unmatched-syntax nil)
    (semanticdb-table "plugins.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("add-to-list" code nil nil [190 232])
            ("package-install" code nil nil [287 313])
            ("global-company-mode" code nil nil [314 335])
            ("global-set-key" code nil nil [337 396])
            ("global-set-key" code nil nil [455 495])
            ("package-install" code nil nil [521 544])
            ("evil" include nil nil [545 560])
            ("my-move-key" function (:arguments ("keymap-from" "keymap-to" "key")) nil [562 785])
            ("my-move-key" code nil nil [786 855])
            ("my-move-key" code nil nil [856 917])
            ("package-install" code nil nil [957 985])
            ("key-chord-mode" code nil nil [986 1004])
            ("key-chord-define-global" code nil nil [1005 1054])
            ("package-install" code nil nil [1077 1107])
            ("global-evil-leader-mode" code nil nil [1159 1184])
            ("evil-mode" code nil nil [1185 1198])
            ("evil-leader/set-leader" code nil nil [1200 1228])
            ("evil-leader/set-key" code nil nil [1229 1285])
            ("package-install" code nil nil [1304 1331])
            ("make-conditional-key-translation" function (:arguments ("key-from" "key-to" "translate-keys-p")) nil [1363 1766])
            ("my-translate-keys-p" function (:arguments ("key-from")) nil [1767 2122])
            ("define-key" code nil nil [2806 2862])
            ("package-install" code nil nil [2881 2913])
            ("global-evil-surround-mode" code nil nil [2914 2943])
            ("package-install" code nil nil [2962 2993])
            ("global-evil-matchit-mode" code nil nil [2994 3022])
            ("package-install" code nil nil [3037 3065])
            ("package-install" code nil nil [3066 3099])
            ("powerline-evil-center-color-theme" code nil nil [3101 3136])
            ("package-install" code nil nil [3161 3199])
            ("global-set-key" code nil nil [3223 3286])
            ("global-set-key" code nil nil [3287 3364])
            ("global-set-key" code nil nil [3365 3426])
            ("global-set-key" code nil nil [3427 3497])
            ("evil-leader/set-key" code nil nil [3519 3926])
            ("package-install" code nil nil [3956 3980])
            ("dired-async-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3981 4032])
            ("dired-async-mode" code nil nil [4033 4053])
            ("package-install" code nil nil [4063 4086])
            ("helm" include nil nil [4088 4103])
            ("global-set-key" code nil nil [4105 4143])
            ("global-set-key" code nil nil [4229 4280])
            ("global-unset-key" code nil nil [4281 4313])
            ("global-set-key" code nil nil [4315 4356])
            ("global-set-key" code nil nil [4357 4406])
            ("define-key" code nil nil [4408 4475])
            ("define-key" code nil nil [4513 4578])
            ("define-key" code nil nil [4608 4662])
            ("package-install" code nil nil [4703 4732])
            ("add-hook" code nil nil [4755 4799])
            ("global-set-key" code nil nil [4846 4886])
            ("global-set-key" code nil nil [4887 4923])
            ("global-set-key" code nil nil [4924 4962])
            ("electric-pair-mode" code nil nil [4987 5009])
            ("show-paren-mode" code nil nil [5040 5059])
            ("setq" code nil nil [5060 5085])
            ("package-install" code nil nil [5101 5130])
            ("package-install" code nil nil [5154 5186])
            ("package-install" code nil nil [5205 5232])
            ("add-hook" code nil nil [5233 5278])
            ("package-install" code nil nil [5288 5311])
            ("add-hook" code nil nil [5312 5363])
            ("add-hook" code nil nil [5364 5405])
            ("setq" code nil nil [5407 5503])
            ("package-install" code nil nil [5517 5544])
            ("package-install" code nil nil [5562 5593])
            ("indent-guide-global-mode" code nil nil [5594 5620])
            ("setq" code nil nil [5621 5652])
            ("package-install" code nil nil [5665 5691])
            ("enable-paredit-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [5692 5785])
            ("add-hook" code nil nil [5786 5846])
            ("add-hook" code nil nil [5847 5918])
            ("add-hook" code nil nil [5919 5979])
            ("add-hook" code nil nil [5980 6040])
            ("add-hook" code nil nil [6041 6101])
            ("add-hook" code nil nil [6102 6162])
            ("package-install" code nil nil [6180 6211])
            ("add-hook" code nil nil [6212 6263])
            ("cc-mode" include nil nil [6276 6294])
            ("setq-default" code nil nil [6313 6358])
            ("define-key" code nil nil [6359 6419])
            ("add-to-list" code nil nil [6455 6681])
            ("package-install" code nil nil [6693 6718])
            ("package-install" code nil nil [6732 6759])
            ("add-hook" code nil nil [6760 6810])
            ("package-install" code nil nil [6825 6853])
            ("add-hook" code nil nil [6854 6897])
            ("package-install" code nil nil [6915 6941])
            ("setq" code nil nil [7103 7171])
            ("load" code nil nil [7172 7188])
            ("add-hook" code nil nil [7189 7234])
            ("package-install" code nil nil [7244 7271])
            ("package-install" code nil nil [7285 7317])
            ("package-install" code nil nil [7327 7355])
            ("package-install" code nil nil [7374 7406])
            ("add-hook" code nil nil [7408 7460])
            ("setq" code nil nil [7483 7556])
            ("setq" code nil nil [7557 7642])
            ("add-to-list" code nil nil [7643 7729])
            ("eval-after-load" code nil nil [7730 7777])
            ("package-install" code nil nil [7801 7838])
            ("add-hook" code nil nil [7839 7891])
            ("package-install" code nil nil [7910 7940])
            ("package-install" code nil nil [7953 7984])
            ("add-hook" code nil nil [7986 8036])
            ("let" code nil nil [8038 8208])
            ("custom-set-variables" code nil nil [8209 8257])
            ("custom-set-variables" code nil nil [8259 8406])
            ("eval-after-load" code nil nil [8407 9030])
            ("eval-after-load" code nil nil [9031 9434])
            ("eval-after-load" code nil nil [9882 10007])
            ("package-install" code nil nil [10040 10068])
            ("srefactor" include nil nil [10069 10089])
            ("srefactor-lisp" include nil nil [10090 10115])
            ("semantic-mode" code nil nil [10161 10178])
            ("define-key" code nil nil [10212 10278])
            ("define-key" code nil nil [10279 10347])
            ("global-set-key" code nil nil [10348 10405])
            ("global-set-key" code nil nil [10406 10466])
            ("global-set-key" code nil nil [10467 10528])
            ("global-set-key" code nil nil [10529 10591])
            ("package-install" code nil nil [10631 10655])
            ("package-install" code nil nil [10656 10686])
            ("package-install" code nil nil [10687 10719])
            ("add-hook" code nil nil [10720 10757])
            ("my-irony-mode-hook" function nil nil [10759 10968])
            ("add-hook" code nil nil [10969 11016])
            ("add-hook" code nil nil [11017 11081])
            ("add-hook" code nil nil [11082 11122])
            ("add-hook" code nil nil [11123 11162])
            ("eval-after-load" code nil nil [11164 11239])
            ("my-cc-style" variable
               (:constant-flag t
                :default-value (quote ("cc-mode" (c-offsets-alist (innamespace . [0])))))
                nil [11273 11353])
            ("c-add-style" code nil nil [11355 11396])
            ("setq-default" code nil nil [11397 11460])
            ("package-install" code nil nil [11483 11519])
            ("add-to-list" code nil nil [11520 11569])
            ("package-install" code nil nil [11688 11718])
            ("eclim" include nil nil [11719 11735])
            ("global-eclim-mode" code nil nil [11736 11755]))          
      :file "plugins.el"
      :pointmax 11756
      :fsize 12244
      :lastmodtime '(22304 16333 527327 319000)
      :unmatched-syntax nil))
  :file "!home!chiggie!dotfiles!.emacs.d!config!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
