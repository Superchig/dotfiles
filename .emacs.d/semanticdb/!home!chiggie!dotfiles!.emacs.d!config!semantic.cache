;; Object config/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "config/"
  :tables
  (list
    (semanticdb-table "themes.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("package-install" code nil nil [75 107])
            ("package-install" code nil nil [108 142])
            ("package-install" code nil nil [143 175])
            ("package-install" code nil nil [176 210])
            ("package-install" code nil nil [211 240])
            ("load-theme" code nil nil [259 282]))          
      :file "themes.el"
      :pointmax 283
      :fsize 282
      :lastmodtime '(22261 55849 924638 999000)
      :unmatched-syntax nil)
    (semanticdb-table "basic.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("global-linum-mode" code nil nil [53 74])
            ("column-number-mode" code nil nil [75 97])
            ("add-to-list" code nil nil [135 187])
            ("lpc-mode" function (:prototype-flag t) nil [188 222])
            ("package" include nil nil [239 257])
            ("add-to-list" code nil nil [258 346])
            ("add-to-list" code nil nil [347 443])
            ("when" code nil nil [444 609])
            ("package-initialize" code nil nil [610 630])
            ("unless" code nil nil [631 734])
            ("add-to-list" code nil nil [758 809])
            ("unless" code nil nil [811 1047])
            ("add-to-list" code nil nil [1049 1115])
            ("el-get" code nil nil [1116 1130])
            ("desktop-save-mode" code nil nil [1155 1176])
            ("setq" code nil nil [1200 1316])
            ("setq" code nil nil [1341 1383])
            ("add-hook" code nil nil [1410 1670])
            ("global-prettify-symbols-mode" code nil nil [1672 1702])
            ("when" code nil nil [1749 1815])
            ("global-set-key" code nil nil [1886 1940])
            ("server-start" code nil nil [1958 1972])
            ("add-to-list" code nil nil [2024 2079])
            ("add-to-list" code nil nil [2080 2137])
            ("setq" code nil nil [2139 2163]))          
      :file "basic.el"
      :pointmax 2164
      :fsize 2171
      :lastmodtime '(22261 55849 924638 999000)
      :unmatched-syntax nil)
    (semanticdb-table "plugins.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("add-to-list" code nil nil [190 232])
            ("package-install" code nil nil [287 313])
            ("global-company-mode" code nil nil [314 335])
            ("global-set-key" code nil nil [337 396])
            ("global-set-key" code nil nil [455 495])
            ("package-install" code nil nil [521 544])
            ("evil" include nil nil [545 560])
            ("my-move-key" function (:arguments ("keymap-from" "keymap-to" "key")) nil [562 785])
            ("my-move-key" code nil nil [786 855])
            ("my-move-key" code nil nil [856 917])
            ("package-install" code nil nil [957 985])
            ("key-chord-mode" code nil nil [986 1004])
            ("key-chord-define-global" code nil nil [1005 1054])
            ("package-install" code nil nil [1077 1107])
            ("global-evil-leader-mode" code nil nil [1159 1184])
            ("evil-mode" code nil nil [1185 1198])
            ("evil-leader/set-leader" code nil nil [1200 1228])
            ("evil-leader/set-key" code nil nil [1229 1285])
            ("package-install" code nil nil [1304 1331])
            ("make-conditional-key-translation" function (:arguments ("key-from" "key-to" "translate-keys-p")) nil [1363 1766])
            ("my-translate-keys-p" function (:arguments ("key-from")) nil [1767 2122])
            ("define-key" code nil nil [2806 2862])
            ("package-install" code nil nil [2881 2913])
            ("global-evil-surround-mode" code nil nil [2914 2943])
            ("package-install" code nil nil [2962 2993])
            ("global-evil-matchit-mode" code nil nil [2994 3022])
            ("package-install" code nil nil [3037 3065])
            ("package-install" code nil nil [3066 3099])
            ("powerline-evil-center-color-theme" code nil nil [3101 3136])
            ("package-install" code nil nil [3161 3199])
            ("global-set-key" code nil nil [3223 3286])
            ("global-set-key" code nil nil [3287 3364])
            ("global-set-key" code nil nil [3365 3426])
            ("global-set-key" code nil nil [3427 3497])
            ("evil-leader/set-key" code nil nil [3519 3926])
            ("package-install" code nil nil [3956 3980])
            ("dired-async-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [3981 4032])
            ("dired-async-mode" code nil nil [4033 4053])
            ("package-install" code nil nil [4063 4086])
            ("helm" include nil nil [4088 4103])
            ("global-set-key" code nil nil [4105 4143])
            ("global-set-key" code nil nil [4229 4280])
            ("global-unset-key" code nil nil [4281 4313])
            ("global-set-key" code nil nil [4315 4356])
            ("global-set-key" code nil nil [4357 4406])
            ("define-key" code nil nil [4408 4475])
            ("define-key" code nil nil [4513 4578])
            ("define-key" code nil nil [4608 4662])
            ("add-hook" code nil nil [4909 4953])
            ("global-set-key" code nil nil [5000 5040])
            ("global-set-key" code nil nil [5041 5077])
            ("global-set-key" code nil nil [5078 5116])
            ("electric-pair-mode" code nil nil [5384 5406])
            ("show-paren-mode" code nil nil [5437 5456])
            ("setq" code nil nil [5457 5482])
            ("package-install" code nil nil [5498 5527])
            ("package-install" code nil nil [5551 5583])
            ("package-install" code nil nil [5602 5629])
            ("add-hook" code nil nil [5630 5675])
            ("package-install" code nil nil [5685 5708])
            ("add-hook" code nil nil [5709 5760])
            ("add-hook" code nil nil [5761 5802])
            ("setq" code nil nil [5804 5900])
            ("package-install" code nil nil [6006 6033])
            ("package-install" code nil nil [6051 6082])
            ("indent-guide-global-mode" code nil nil [6083 6109])
            ("setq" code nil nil [6110 6141])
            ("package-install" code nil nil [6154 6180])
            ("enable-paredit-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [6181 6274])
            ("add-hook" code nil nil [6275 6335])
            ("add-hook" code nil nil [6336 6407])
            ("add-hook" code nil nil [6408 6468])
            ("add-hook" code nil nil [6469 6529])
            ("add-hook" code nil nil [6530 6590])
            ("add-hook" code nil nil [6591 6651])
            ("package-install" code nil nil [6669 6700])
            ("add-hook" code nil nil [6701 6752])
            ("cc-mode" include nil nil [6765 6783])
            ("setq-default" code nil nil [6802 6847])
            ("define-key" code nil nil [6848 6908])
            ("add-to-list" code nil nil [6944 7170])
            ("package-install" code nil nil [7182 7207])
            ("package-install" code nil nil [7221 7248])
            ("add-hook" code nil nil [7249 7299])
            ("package-install" code nil nil [7314 7342])
            ("add-hook" code nil nil [7343 7386])
            ("package-install" code nil nil [7404 7430])
            ("setq" code nil nil [7592 7660])
            ("load" code nil nil [7661 7677])
            ("add-hook" code nil nil [7678 7723])
            ("package-install" code nil nil [7733 7760])
            ("package-install" code nil nil [7774 7806])
            ("package-install" code nil nil [7816 7844])
            ("package-install" code nil nil [7863 7895])
            ("add-hook" code nil nil [7897 7949])
            ("setq" code nil nil [7972 8045])
            ("setq" code nil nil [8046 8131])
            ("add-to-list" code nil nil [8132 8218])
            ("eval-after-load" code nil nil [8219 8266])
            ("package-install" code nil nil [8290 8327])
            ("add-hook" code nil nil [8328 8380])
            ("package-install" code nil nil [8399 8429])
            ("package-install" code nil nil [8442 8473])
            ("add-hook" code nil nil [8475 8525])
            ("let" code nil nil [8527 8697])
            ("custom-set-variables" code nil nil [8698 8746])
            ("custom-set-variables" code nil nil [8748 8895])
            ("eval-after-load" code nil nil [8896 9519])
            ("eval-after-load" code nil nil [9520 9923])
            ("eval-after-load" code nil nil [10371 10496])
            ("package-install" code nil nil [10529 10557])
            ("srefactor" include nil nil [10558 10578])
            ("srefactor-lisp" include nil nil [10579 10604])
            ("semantic-mode" code nil nil [10650 10667])
            ("define-key" code nil nil [10701 10767])
            ("define-key" code nil nil [10768 10836])
            ("global-set-key" code nil nil [10837 10894])
            ("global-set-key" code nil nil [10895 10955])
            ("global-set-key" code nil nil [10956 11017])
            ("global-set-key" code nil nil [11018 11080])
            ("package-install" code nil nil [11120 11144])
            ("package-install" code nil nil [11145 11175])
            ("package-install" code nil nil [11176 11208])
            ("add-hook" code nil nil [11209 11246])
            ("my-irony-mode-hook" function nil nil [11248 11457])
            ("add-hook" code nil nil [11458 11505])
            ("add-hook" code nil nil [11506 11570])
            ("add-hook" code nil nil [11571 11611])
            ("add-hook" code nil nil [11612 11651])
            ("eval-after-load" code nil nil [11653 11728])
            ("my-cc-style" variable
               (:constant-flag t
                :default-value (quote ("cc-mode" (c-offsets-alist (innamespace . [0])))))
                nil [11762 11842])
            ("c-add-style" code nil nil [11844 11885])
            ("setq-default" code nil nil [11886 11949])
            ("package-install" code nil nil [11972 12008])
            ("add-to-list" code nil nil [12009 12058])
            ("package-install" code nil nil [12177 12207])
            ("eclim" include nil nil [12208 12224])
            ("global-eclim-mode" code nil nil [12225 12244]))          
      :file "plugins.el"
      :pointmax 12245
      :fsize 12244
      :lastmodtime '(22262 12050 161356 999000)
      :unmatched-syntax nil))
  :file "!home!chiggie!dotfiles!.emacs.d!config!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
